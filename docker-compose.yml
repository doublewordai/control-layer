services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-control_layer}
      POSTGRES_USER: ${POSTGRES_USER:-control_layer}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-control_layer_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U control_layer -d control_layer"]
      start_period: 1s
      interval: 1s
      timeout: 3s
      retries: 10

  control-layer:
    # image: ${IMAGE:-ghcr.io/doublewordai/control-layer:${TAG:-latest}}
    # pull_policy: ${PULL_POLICY:-always}
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3001:3001"
    environment:
      - RUST_LOG={RUST_LOG:-info}
      - DATABASE_URL=postgres://control_layer:control_layer_password@postgres:5432/control_layer
      - DWCTL_SECRET_KEY=mysupersecretkey

    volumes:
      - ./config.yaml:/app/config.yaml:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/healthz"]
      start_period: 1s
      interval: 100s
      timeout: 3s
      retries: 10

  control-layer-frontend:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - BACKEND_URL=http://control-layer:3001
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    depends_on:
      - control-layer

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
